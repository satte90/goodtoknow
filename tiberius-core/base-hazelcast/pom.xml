<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.teliacompany.tiberius</groupId>
        <artifactId>tiberius-reactor</artifactId>
        <version>4.5.14-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>tiberius-base-hazelcast</artifactId>
    <name>Tiberius :: Base :: Hazelcast</name>

    <properties>
        <groovy-maven-plugin.version>2.1.1</groovy-maven-plugin.version>
        <java.version>11</java.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.teliacompany.tiberius</groupId>
                <artifactId>tiberius-dependency-management</artifactId>
                <version>4.5.14-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring boot starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.teliacompany.webflux</groupId>
            <artifactId>request-webflux-starter</artifactId>
        </dependency>

        <!-- Error Starter -->
        <dependency>
            <groupId>com.teliacompany.webflux</groupId>
            <artifactId>error-webflux-starter</artifactId>
        </dependency>

        <!-- Hazelcast -->
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-kubernetes</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources/versions</directory>
                <filtering>true</filtering>
                <targetPath>versions</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.teliacompany.bumper</groupId>
                <artifactId>bumper-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>${groovy-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <!-- Groovy code to get the versions of certain dependencies and add them as properties -->
                            <source>
                                Arrays.asList("hazelcast", "hazelcast-spring", "hazelcast-kubernetes")
                                .forEach { dependencyName ->
                                String version = project.dependencies.stream()
                                .filter { dep -> (dep.artifactId == dependencyName) }
                                .findFirst()
                                .map { d -> d.version }
                                .orElse('unknown')
                                project.properties.put(dependencyName + '.version', version)
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
