<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>tiberius-parent-server</artifactId>
        <groupId>com.teliacompany.tiberius</groupId>
        <version>4.5.14-SNAPSHOT</version>
        <relativePath>../parent-server/pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>tiberius-base-server</artifactId>
    <name>Tiberius :: Base :: Server</name>
    <description>Base server for Tiberius</description>
    <packaging>jar</packaging>

    <properties>
        <groovy-maven-plugin.version>2.1.1</groovy-maven-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>

        <!-- Error Starter -->
        <dependency>
            <groupId>com.teliacompany.webflux</groupId>
            <artifactId>error-webflux-starter</artifactId>
        </dependency>

        <!-- Base Server API -->
        <dependency>
            <groupId>com.teliacompany.tiberius</groupId>
            <artifactId>tiberius-base-api</artifactId>
            <version>4.5.14-SNAPSHOT</version>
        </dependency>

        <!-- Base Server Utils -->
        <dependency>
            <groupId>com.teliacompany.tiberius</groupId>
            <artifactId>tiberius-base-utils</artifactId>
            <version>4.5.14-SNAPSHOT</version>
        </dependency>

        <!-- Request webflux starter -->
        <dependency>
            <groupId>com.teliacompany.webflux</groupId>
            <artifactId>request-webflux-starter</artifactId>
        </dependency>

        <!-- AWS -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>secretsmanager</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>netty-nio-client</artifactId>
        </dependency>

        <!-- Jackson Starter -->
        <dependency>
            <groupId>com.teliacompany.webflux</groupId>
            <artifactId>jackson-webflux-starter</artifactId>
        </dependency>

        <!-- ApiMarket4J -->
        <!-- Scope: Provided - if service uses any ApiMarket4j module then it will have dependency to core as well -->
        <dependency>
            <groupId>com.teliacompany.apimarket4j</groupId>
            <artifactId>apimarket4j-core</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Apigee4J -->
        <!-- Scope: Provided - if service uses any Apigee4j module then it will have dependency to core as well -->
        <dependency>
            <groupId>com.teliacompany.apigee4j</groupId>
            <artifactId>apigee4j-core</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Spock4J -->
        <!-- Scope: Provided - if service uses any Spock4J module then it will have dependency to core as well -->
        <dependency>
            <groupId>com.teliacompany.spock4j</groupId>
            <artifactId>spock4j-core</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Augustus User Client -->
        <dependency>
            <groupId>com.teliacompany.tiberius.user</groupId>
            <artifactId>tiberius-user-client</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.teliacompany.springfield.error</groupId>
                    <artifactId>springfield-error-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Augustus User Auth Client -->
        <dependency>
            <groupId>com.teliacompany.tiberius.user.auth</groupId>
            <artifactId>tiberius-user-auth-client</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.teliacompany.springfield.error</groupId>
                    <artifactId>springfield-error-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Swagger doc -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-webflux-ui</artifactId>
        </dependency>

        <!-- Apache Commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
        </dependency>

        <!-- Tiberius Crypto -->
        <dependency>
            <groupId>com.teliacompany.tiberius.crypto</groupId>
            <artifactId>tiberius-crypto-starter</artifactId>
        </dependency>

        <!-- Micrometer Prometheus registry  -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>

        <!-- Log4j Core override - used to extract log4j version - DepManagement specifies version, this should also override dependencies inherited from spring -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources/versions</directory>
                <filtering>true</filtering>
                <targetPath>versions</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>${groovy-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <!-- Groovy code to get the versions of certain dependencies and add them as properties -->
                            <source>
                                Arrays.asList("request-webflux-starter", "error-webflux-starter", "jackson-webflux-starter", "log4j-core")
                                        .forEach { dependencyName ->
                                            String version = project.dependencies.stream()
                                                    .filter { dep -> (dep.artifactId == dependencyName) }
                                                    .findFirst()
                                                    .map { d -> d.version }
                                                    .orElse('unknown')
                                            project.properties.put(dependencyName + '.version', version)
                                        }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.teliacompany.bumper</groupId>
                <artifactId>bumper-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
